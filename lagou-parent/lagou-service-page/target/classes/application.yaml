server:
  port: 9100
spring:
  application:
    name: lagou-service-page
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.108.128:3306/springbootdata?characterEncoding=utf-8
    username: root
    password: LiRuYi@666
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}
  client:
    service-url:
      defaultZone: http://LagouCloudEurekaServerA:9200/eureka/,http://LagouCloudEurekaServerB:9201/eureka/
    fetch-registry: true
    register-with-eureka: true
lagou-service-product:
  ribbon:
    #请求超时时间
    #ConnectionTimeout: 2000
    #请求处理时间
    #ReadTimeout: 3000
    #对所有操作都进行重试
    OkToRetryOnAllOperations: true
    ####根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例（次数由MaxAutoRetries配置），
    ####如果不行，就换一个实例进行访问，如果还不行，再换一次实例访问（更换次数由MaxAutoRetriesNextServer配置），
    ####如果依然不行，返回失败信息。
    MaxAutoRetries: 2 #对当前选中实例重试次数，不包括第一次调用   如果访问到故障请求,0表示不重试
    MaxAutoRetriesNextServer: 0 #切换实例的重试次数          如果下一次访问仍然是故障请求,重试次数0，依然不重试
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule  #针对lagou-service-product这个微服务的负载均衡策略是随机策略   如果不注明是哪个微服务那么就是全局生效
# 配置熔断策略：
hystrix:
  command:
    default:
      circuitBreaker:
        # 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。 默认false关闭的
        forceOpen: false
        # 触发熔断错误比例阈值，默认值50%
        errorThresholdPercentage: 50
        # 熔断后休眠时长，默认值5秒
        sleepWindowInMilliseconds: 3000
        # 熔断触发最小请求次数，默认值是20
        requestVolumeThreshold: 2
      execution:
        isolation:
          thread:
            # 熔断超时设置，默认为1秒
            timeoutInMilliseconds: 2000
# springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # 暴露健康接口的细节
  endpoint:
    health:
      show-details: always
#开启feign的熔断功能
feign:
  hystrix:
    enabled: true  #feign也支持熔断器功能
